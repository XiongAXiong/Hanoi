本练习程序用于实现汉诺塔（Tower of Hanoi）游戏。

汉诺塔问题是源于印度一个古老传说的益智玩具。大梵天创造世界的时候做了三根金刚石柱子，在一根柱子上从下往上按照大小顺序摞着64片黄金圆盘。大梵天命令婆罗门把圆盘从下面开始按大小顺序重新摆放在另一根柱子上。并且规定，在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个圆盘。

有三根相邻的柱子，标号为A,B,C，A柱子从下到上按金字塔状叠放着n个不同大小的圆盘，要把盘子一个一个移动到柱子B上，并且每次移动同一根柱子上都不能出现大盘子在小盘子上方，请问至少需要多少次移动，设移动字数为H(n)。

需求分析：
1. 需要有良好的用户界面，包括圆盘个数（最多不超过7个圆盘），模式选择（模式一和模式二，见需求分析2），给出汉诺塔图形化界面等。
2. 有两种模式，第一种模式由用户来给出每步方案，且有图形化反馈，计总步数等；第二种模式由程序给出每步方案。

************************************************************

                    Tower of Hanoi Game

				  Designer: Yueyang Song
				 (yueyangsong@foxmail.com)

************************************************************

               Welcome to Tower of Hanoi Game! 

>>> How many plates do you want to play? 
>>> 3

------------------------------------------------------------
  Step 0.
          *                  *                  *
          *                  *                  *
          *                  *                  *
  		  *                  *                  *
		  *                  *                  *
	     ###                 *                  *
	    #####                *                  *
	   #######               *                  *
  *****************  *****************  *****************
          A                  B                  C
------------------------------------------------------------

>>> What's your move?
>>> A B

------------------------------------------------------------
  Step 1. A -> B

          *                  *                  *
          *                  *                  *
          *                  *                  *
		  *                  *                  *
		  *                  *                  *
	      *                  *                  *
	    #####                *                  *
	   #######              ###                 *
  *****************  *****************  *****************
          A                  B                  C
------------------------------------------------------------

>>> What's your move?
>>> A B
>>> Sorry! Big plate can't place on the top of the small one.
>>> What's your move?
>>> A C

------------------------------------------------------------
  Step 2. A -> C

          *                  *                  *
          *                  *                  *
		  *                  *                  *
		  *                  *                  *
		  *                  *                  *
	      *                  *                  *
	      *                  *                  *
	   #######              ###               #####
  *****************  *****************  *****************
          A                  B                  C
------------------------------------------------------------

>>> What's your move?

...... ......

------------------------------------------------------------
  Step 5. A -> C

          *                  *                  *
          *                  *                  *
		  *                  *                  *
		  *                  *                  *
		  *                  *                  *
	      *                  *                 ###
	      *                  *                #####
	      *                  *               #######
  *****************  *****************  *****************
          A                  B                  C
------------------------------------------------------------

>>> Congratulation!
>>> You made it!

>>> Do you want to quit(Q) or continue(C)?
>>> 
